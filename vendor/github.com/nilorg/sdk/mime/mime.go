package mime

import (
	"io"
	"mime"
	"net/http"
	"path/filepath"
	"strings"
)

var (
	// ExtensionMIMEType ...
	ExtensionMIMEType = map[string]string{
		".aac":     "audio/aac",
		".abw":     "application/x-abiword",
		".arc":     "application/x-freearc",
		".avi":     "video/x-msvideo",
		".azw":     "application/vnd.amazon.ebook",
		".bin":     "application/octet-stream",
		".bmp":     "image/bmp",
		".bz":      "application/x-bzip",
		".bz2":     "application/x-bzip2",
		".csh":     "application/x-csh",
		".css":     "text/css",
		".csv":     "text/csv",
		".doc":     "application/msword",
		".docx":    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
		".eot":     "application/vnd.ms-fontobject",
		".epub":    "application/epub+zip",
		".gz":      "application/gzip",
		".gif":     "image/gif",
		".htm":     "text/html",
		".html":    "text/html",
		".ico":     "image/vnd.microsoft.icon",
		".ics":     "text/calendar",
		".jar":     "application/java-archive",
		".jpeg":    "image/jpeg",
		".jpg":     "image/jpeg",
		".js":      "text/javascript",
		".json":    "application/json",
		".jsonld":  "application/ld+json",
		".mid":     "audio/midi audio/x-midi",
		".midi":    "audio/midi audio/x-midi",
		".mjs":     "text/javascript",
		".mp3":     "audio/mpeg",
		".mpeg":    "video/mpeg",
		".mpkg":    "application/vnd.apple.installer+xml",
		".odp":     "application/vnd.oasis.opendocument.presentation",
		".ods":     "application/vnd.oasis.opendocument.spreadsheet",
		".odt":     "application/vnd.oasis.opendocument.text",
		".oga":     "audio/ogg",
		".ogv":     "video/ogg",
		".ogx":     "application/ogg",
		".opus":    "audio/opus",
		".otf":     "font/otf",
		".png":     "image/png",
		".pdf":     "application/pdf",
		".php":     "application/x-httpd-php",
		".ppt":     "application/vnd.ms-powerpoint",
		".pptx":    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
		".rar":     "application/vnd.rar",
		".rtf":     "application/rtf",
		".sh":      "application/x-sh",
		".svg":     "image/svg+xml",
		".swf":     "application/x-shockwave-flash",
		".tar":     "application/x-tar",
		".tif":     "image/tiff",
		".tiff":    "image/tiff",
		".ts":      "video/mp2t",
		".ttf":     "font/ttf",
		".txt":     "text/plain",
		".vsd":     "application/vnd.visio",
		".wav":     "audio/wav",
		".weba":    "audio/webm",
		".webm":    "video/webm",
		".webp":    "image/webp",
		".woff":    "font/woff",
		".woff2":   "font/woff2",
		".xhtml":   "application/xhtml+xml",
		".xls":     "application/vnd.ms-excel",
		".xlsx":    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
		".xml":     "application/xml",
		".xul":     "application/vnd.mozilla.xul+xml",
		".zip":     "application/zip",
		".3gp":     "video/3gpp",
		".3g2":     "video/3gpp2",
		".7z":      "application/x-7z-compressed",
		".flv":     "video/x-flv",
		".mp4":     "video/mp4",
		".acp":     "audio/x-mei-aac",
		".ai":      "application/postscript",
		".aif":     "audio/aiff",
		".aifc":    "audio/aiff",
		".aiff":    "audio/aiff",
		".anv":     "application/x-anv",
		".asa":     "text/asa",
		".asf":     "video/x-ms-asf",
		".asp":     "text/asp",
		".asx":     "video/x-ms-asf",
		".au":      "audio/basic",
		".awf":     "application/vnd.adobe.workflow",
		".biz":     "text/xml",
		".bot":     "application/x-bot",
		".c4t":     "application/x-c4t",
		".c90":     "application/x-c90",
		".cal":     "application/x-cals",
		".cat":     "application/vnd.ms-pki.seccat",
		".cdf":     "application/x-netcdf",
		".cdr":     "application/x-cdr",
		".cel":     "application/x-cel",
		".cer":     "application/x-x509-ca-cert",
		".cg4":     "application/x-g4",
		".cgm":     "application/x-cgm",
		".cit":     "application/x-cit",
		".class":   "java/",
		".cml":     "text/xml",
		".cmp":     "application/x-cmp",
		".cmx":     "application/x-cmx",
		".cot":     "application/x-cot",
		".crl":     "application/pkix-crl",
		".crt":     "application/x-x509-ca-cert",
		".csi":     "application/x-csi",
		".cut":     "application/x-cut",
		".dbf":     "application/x-dbf",
		".dbm":     "application/x-dbm",
		".dbx":     "application/x-dbx",
		".dcd":     "text/xml",
		".dcx":     "application/x-dcx",
		".der":     "application/x-x509-ca-cert",
		".dgn":     "application/x-dgn",
		".dib":     "application/x-dib",
		".dll":     "application/x-msdownload",
		".dot":     "application/msword",
		".drw":     "application/x-drw",
		".dtd":     "text/xml",
		".dwf":     "Model/vnd.dwf",
		".dwg":     "application/x-dwg",
		".dxb":     "application/x-dxb",
		".dxf":     "application/x-dxf",
		".edn":     "application/vnd.adobe.edn",
		".emf":     "application/x-emf",
		".eml":     "message/rfc822",
		".ent":     "text/xml",
		".epi":     "application/x-epi",
		".eps":     "application/x-ps",
		".etd":     "application/x-ebx",
		".exe":     "application/x-msdownload",
		".fax":     "image/fax",
		".fdf":     "application/vnd.fdf",
		".fif":     "application/fractals",
		".fo":      "text/xml",
		".frm":     "application/x-frm",
		".g4":      "application/x-g4",
		".gbr":     "application/x-gbr",
		".gl2":     "application/x-gl2",
		".gp4":     "application/x-gp4",
		".hgl":     "application/x-hgl",
		".hmr":     "application/x-hmr",
		".hpg":     "application/x-hpgl",
		".hpl":     "application/x-hpl",
		".hqx":     "application/mac-binhex40",
		".hrf":     "application/x-hrf",
		".hta":     "application/hta",
		".htc":     "text/x-component",
		".htt":     "text/webviewhtml",
		".htx":     "text/html",
		".icb":     "application/x-icb",
		".iff":     "application/x-iff",
		".ig4":     "application/x-g4",
		".igs":     "application/x-igs",
		".iii":     "application/x-iphone",
		".img":     "application/x-img",
		".ins":     "application/x-internet-signup",
		".isp":     "application/x-internet-signup",
		".IVF":     "video/x-ivf",
		".java":    "java/*",
		".jfif":    "image/jpeg",
		".jpe":     "image/jpeg",
		".jsp":     "text/html",
		".la1":     "audio/x-liquid-file",
		".lar":     "application/x-laplayer-reg",
		".latex":   "application/x-latex",
		".lavs":    "audio/x-liquid-secure",
		".lbm":     "application/x-lbm",
		".lmsff":   "audio/x-la-lms",
		".ls":      "application/x-javascript",
		".ltr":     "application/x-ltr",
		".m1v":     "video/x-mpeg",
		".m2v":     "video/x-mpeg",
		".m3u":     "audio/mpegurl",
		".m4e":     "video/mpeg4",
		".mac":     "application/x-mac",
		".man":     "application/x-troff-man",
		".math":    "text/xml",
		".mdb":     "application/msaccess",
		".mfp":     "application/x-shockwave-flash",
		".mht":     "message/rfc822",
		".mhtml":   "message/rfc822",
		".mi":      "application/x-mi",
		".mil":     "application/x-mil",
		".mml":     "text/xml",
		".mnd":     "audio/x-musicnet-download",
		".mns":     "audio/x-musicnet-stream",
		".mocha":   "application/x-javascript",
		".movie":   "video/x-sgi-movie",
		".mp1":     "audio/mp1",
		".mp2":     "audio/mp2",
		".mp2v":    "video/mpeg",
		".mpa":     "video/x-mpg",
		".mpd":     "application/vnd.ms-project",
		".mpe":     "video/x-mpeg",
		".mpg":     "video/mpg",
		".mpga":    "audio/rn-mpeg",
		".mpp":     "application/vnd.ms-project",
		".mps":     "video/x-mpeg",
		".mpt":     "application/vnd.ms-project",
		".mpv":     "video/mpg",
		".mpv2":    "video/mpeg",
		".mpw":     "application/vnd.ms-project",
		".mpx":     "application/vnd.ms-project",
		".mtx":     "text/xml",
		".mxp":     "application/x-mmxp",
		".net":     "image/pnetvue",
		".nrf":     "application/x-nrf",
		".nws":     "message/rfc822",
		".odc":     "text/x-ms-odc",
		".out":     "application/x-out",
		".p10":     "application/pkcs10",
		".p12":     "application/x-pkcs12",
		".p7b":     "application/x-pkcs7-certificates",
		".p7c":     "application/pkcs7-mime",
		".p7m":     "application/pkcs7-mime",
		".p7r":     "application/x-pkcs7-certreqresp",
		".p7s":     "application/pkcs7-signature",
		".pc5":     "application/x-pc5",
		".pci":     "application/x-pci",
		".pcl":     "application/x-pcl",
		".pcx":     "application/x-pcx",
		".pdb":     "chemical/x-pdb",
		".pdx":     "application/vnd.adobe.pdx",
		".pfx":     "application/x-pkcs12",
		".pgl":     "application/x-pgl",
		".pic":     "application/x-pic",
		".pko":     "application/vnd.ms-pki.pko",
		".pl":      "application/x-perl",
		".plg":     "text/html",
		".pls":     "audio/scpls",
		".plt":     "application/x-plt",
		".pot":     "application/vnd.ms-powerpoint",
		".ppa":     "application/vnd.ms-powerpoint",
		".ppm":     "application/x-ppm",
		".pps":     "application/vnd.ms-powerpoint",
		".pr":      "application/x-pr",
		".prf":     "application/pics-rules",
		".prn":     "application/x-prn",
		".prt":     "application/x-prt",
		".ps":      "application/x-ps",
		".ptn":     "application/x-ptn",
		".pwz":     "application/vnd.ms-powerpoint",
		".r3t":     "text/vnd.rn-realtext3d",
		".ra":      "audio/vnd.rn-realaudio",
		".ram":     "audio/x-pn-realaudio",
		".ras":     "application/x-ras",
		".rat":     "application/rat-file",
		".rdf":     "text/xml",
		".rec":     "application/vnd.rn-recording",
		".red":     "application/x-red",
		".rgb":     "application/x-rgb",
		".rjs":     "application/vnd.rn-realsystem-rjs",
		".rjt":     "application/vnd.rn-realsystem-rjt",
		".rlc":     "application/x-rlc",
		".rle":     "application/x-rle",
		".rm":      "application/vnd.rn-realmedia",
		".rmf":     "application/vnd.adobe.rmf",
		".rmi":     "audio/mid",
		".rmj":     "application/vnd.rn-realsystem-rmj",
		".rmm":     "audio/x-pn-realaudio",
		".rmp":     "application/vnd.rn-rn_music_package",
		".rms":     "application/vnd.rn-realmedia-secure",
		".rmvb":    "application/vnd.rn-realmedia-vbr",
		".rmx":     "application/vnd.rn-realsystem-rmx",
		".rnx":     "application/vnd.rn-realplayer",
		".rp":      "image/vnd.rn-realpix",
		".rpm":     "audio/x-pn-realaudio-plugin",
		".rsml":    "application/vnd.rn-rsml",
		".rt":      "text/vnd.rn-realtext",
		".rv":      "video/vnd.rn-realvideo",
		".sam":     "application/x-sam",
		".sat":     "application/x-sat",
		".sdp":     "application/sdp",
		".sdw":     "application/x-sdw",
		".sit":     "application/x-stuffit",
		".slb":     "application/x-slb",
		".sld":     "application/x-sld",
		".slk":     "drawing/x-slk",
		".smi":     "application/smil",
		".smil":    "application/smil",
		".smk":     "application/x-smk",
		".snd":     "audio/basic",
		".sol":     "text/plain",
		".sor":     "text/plain",
		".spc":     "application/x-pkcs7-certificates",
		".spl":     "application/futuresplash",
		".spp":     "text/xml",
		".ssm":     "application/streamingmedia",
		".sst":     "application/vnd.ms-pki.certstore",
		".stl":     "application/vnd.ms-pki.stl",
		".stm":     "text/html",
		".sty":     "application/x-sty",
		".tdf":     "application/x-tdf",
		".tg4":     "application/x-tg4",
		".tga":     "application/x-tga",
		".tld":     "text/xml",
		".top":     "drawing/x-top",
		".torrent": "application/x-bittorrent",
		".tsd":     "text/xml",
		".uin":     "application/x-icq",
		".uls":     "text/iuls",
		".vcf":     "text/x-vcard",
		".vda":     "application/x-vda",
		".vdx":     "application/vnd.visio",
		".vml":     "text/xml",
		".vpg":     "application/x-vpeg005",
		".vss":     "application/vnd.visio",
		".vst":     "application/vnd.visio",
		".vsw":     "application/vnd.visio",
		".vsx":     "application/vnd.visio",
		".vtx":     "application/vnd.visio",
		".vxml":    "text/xml",
		".wax":     "audio/x-ms-wax",
		".wb1":     "application/x-wb1",
		".wb2":     "application/x-wb2",
		".wb3":     "application/x-wb3",
		".wbmp":    "image/vnd.wap.wbmp",
		".wiz":     "application/msword",
		".wk3":     "application/x-wk3",
		".wk4":     "application/x-wk4",
		".wkq":     "application/x-wkq",
		".wks":     "application/x-wks",
		".wm":      "video/x-ms-wm",
		".wma":     "audio/x-ms-wma",
		".wmd":     "application/x-ms-wmd",
		".wmf":     "application/x-wmf",
		".wml":     "text/vnd.wap.wml",
		".wmv":     "video/x-ms-wmv",
		".wmx":     "video/x-ms-wmx",
		".wmz":     "application/x-ms-wmz",
		".wp6":     "application/x-wp6",
		".wpd":     "application/x-wpd",
		".wpg":     "application/x-wpg",
		".wpl":     "application/vnd.ms-wpl",
		".wq1":     "application/x-wq1",
		".wr1":     "application/x-wr1",
		".wri":     "application/x-wri",
		".wrk":     "application/x-wrk",
		".ws":      "application/x-ws",
		".ws2":     "application/x-ws",
		".wsc":     "text/scriptlet",
		".wsdl":    "text/xml",
		".wvx":     "video/x-ms-wvx",
		".xdp":     "application/vnd.adobe.xdp",
		".xdr":     "text/xml",
		".xfd":     "application/vnd.adobe.xfd",
		".xfdf":    "application/vnd.adobe.xfdf",
		".xlw":     "application/x-xlw",
		".xpl":     "audio/scpls",
		".xq":      "text/xml",
		".xql":     "text/xml",
		".xquery":  "text/xml",
		".xsd":     "text/xml",
		".xsl":     "text/xml",
		".xslt":    "text/xml",
		".xwd":     "application/x-xwd",
		".x_b":     "application/x-x_b",
		".sis":     "application/vnd.symbian.install",
		".sisx":    "application/vnd.symbian.install",
		".x_t":     "application/x-x_t",
		".ipa":     "application/vnd.iphone",
		".apk":     "application/vnd.android.package-archive",
		".xap":     "application/x-silverlight-app",
	}
)

func formatExtension(extension string) string {
	if extension[0:1] != "." {
		extension = "." + extension
	}
	return strings.ToLower(extension)
}

// Set 设置
func Set(extension, mimeType string) {
	if len(extension) > 0 {
		extension = formatExtension(extension)
	} else {
		return
	}
	ExtensionMIMEType[extension] = mimeType
}

// Lookup 查找
func Lookup(extension string) (mimeType string, exist bool) {
	if len(extension) > 0 {
		extension = formatExtension(extension)
	} else {
		return
	}
	mimeType, exist = ExtensionMIMEType[extension]
	return
}

// The algorithm uses at most sniffLen bytes to make its decision.
const sniffLen = 512

// 检测内容类型
func DetectContentType(name string, content ...io.ReadSeeker) (contentType string, err error) {
	contentType = mime.TypeByExtension(filepath.Ext(name))
	if contentType == "" && len(content) > 0 {
		// read a chunk to decide between utf-8 text and binary
		var buf [sniffLen]byte
		n, _ := io.ReadFull(content[0], buf[:])
		contentType = http.DetectContentType(buf[:n])
		_, err = content[0].Seek(0, io.SeekStart) // rewind to output whole file
		if err != nil {
			contentType = ""
		}
	}
	return
}
